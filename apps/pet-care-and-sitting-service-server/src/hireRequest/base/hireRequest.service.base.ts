/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HireRequest as PrismaHireRequest } from "@prisma/client";

export class HireRequestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HireRequestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hireRequest.count(args);
  }

  async hireRequests<T extends Prisma.HireRequestFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HireRequestFindManyArgs>
  ): Promise<PrismaHireRequest[]> {
    return this.prisma.hireRequest.findMany<Prisma.HireRequestFindManyArgs>(
      args
    );
  }
  async hireRequest<T extends Prisma.HireRequestFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HireRequestFindUniqueArgs>
  ): Promise<PrismaHireRequest | null> {
    return this.prisma.hireRequest.findUnique(args);
  }
  async createHireRequest<T extends Prisma.HireRequestCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HireRequestCreateArgs>
  ): Promise<PrismaHireRequest> {
    return this.prisma.hireRequest.create<T>(args);
  }
  async updateHireRequest<T extends Prisma.HireRequestUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HireRequestUpdateArgs>
  ): Promise<PrismaHireRequest> {
    return this.prisma.hireRequest.update<T>(args);
  }
  async deleteHireRequest<T extends Prisma.HireRequestDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HireRequestDeleteArgs>
  ): Promise<PrismaHireRequest> {
    return this.prisma.hireRequest.delete(args);
  }
}
