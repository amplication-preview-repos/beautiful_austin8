/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PetFood as PrismaPetFood } from "@prisma/client";

export class PetFoodServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PetFoodCountArgs, "select">): Promise<number> {
    return this.prisma.petFood.count(args);
  }

  async petFoods<T extends Prisma.PetFoodFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetFoodFindManyArgs>
  ): Promise<PrismaPetFood[]> {
    return this.prisma.petFood.findMany<Prisma.PetFoodFindManyArgs>(args);
  }
  async petFood<T extends Prisma.PetFoodFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetFoodFindUniqueArgs>
  ): Promise<PrismaPetFood | null> {
    return this.prisma.petFood.findUnique(args);
  }
  async createPetFood<T extends Prisma.PetFoodCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetFoodCreateArgs>
  ): Promise<PrismaPetFood> {
    return this.prisma.petFood.create<T>(args);
  }
  async updatePetFood<T extends Prisma.PetFoodUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetFoodUpdateArgs>
  ): Promise<PrismaPetFood> {
    return this.prisma.petFood.update<T>(args);
  }
  async deletePetFood<T extends Prisma.PetFoodDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetFoodDeleteArgs>
  ): Promise<PrismaPetFood> {
    return this.prisma.petFood.delete(args);
  }
}
