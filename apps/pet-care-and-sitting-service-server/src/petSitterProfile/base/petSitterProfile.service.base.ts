/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PetSitterProfile as PrismaPetSitterProfile,
} from "@prisma/client";

export class PetSitterProfileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PetSitterProfileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.petSitterProfile.count(args);
  }

  async petSitterProfiles<T extends Prisma.PetSitterProfileFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetSitterProfileFindManyArgs>
  ): Promise<PrismaPetSitterProfile[]> {
    return this.prisma.petSitterProfile.findMany<Prisma.PetSitterProfileFindManyArgs>(
      args
    );
  }
  async petSitterProfile<T extends Prisma.PetSitterProfileFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetSitterProfileFindUniqueArgs>
  ): Promise<PrismaPetSitterProfile | null> {
    return this.prisma.petSitterProfile.findUnique(args);
  }
  async createPetSitterProfile<T extends Prisma.PetSitterProfileCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetSitterProfileCreateArgs>
  ): Promise<PrismaPetSitterProfile> {
    return this.prisma.petSitterProfile.create<T>(args);
  }
  async updatePetSitterProfile<T extends Prisma.PetSitterProfileUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetSitterProfileUpdateArgs>
  ): Promise<PrismaPetSitterProfile> {
    return this.prisma.petSitterProfile.update<T>(args);
  }
  async deletePetSitterProfile<T extends Prisma.PetSitterProfileDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PetSitterProfileDeleteArgs>
  ): Promise<PrismaPetSitterProfile> {
    return this.prisma.petSitterProfile.delete(args);
  }
}
